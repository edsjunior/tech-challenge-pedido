services:
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - tech-challenge-fiap
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  db:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=tech-challenge-db'
      - 'POSTGRES_USER=myuser'
      - 'POSTGRES_PASSWORD=secret'
    ports:
      - 5432
    networks:
      - tech-challenge-fiap

  pagamento-service:
    image: brunoalbubrito/tech-challenge-pagamento
    environment:
      - 'DB_HOST=db'
      - 'DB_NAME=tech-challenge-db'
      - 'DB_USERNAME=myuser'
      - 'DB_PASSWORD=secret'
      - 'SPRING_RABBITMQ_HOST=rabbitmq' # Certifique-se de usar o nome do serviço aqui
      - 'SPRING_RABBITMQ_PORT=5672'
    ports:
      - 8083:8083
    networks:
      - tech-challenge-fiap
    depends_on:
      - db
      - rabbitmq

  pedido-service:
    image: edsjunior7/tech-challenge-pedido
    ports:
      - 8085:80
    environment:
      - 'DB_HOST=db'
      - 'DB_NAME=tech-challenge-db'
      - 'DB_USERNAME=myuser'
      - 'DB_PASSWORD=secret'
      - 'PAGAMENTO_API_URL=http://pagamento-service:8083'
      - 'RABBITMQ_HOST=rabbitmq'
      - 'RABBITMQ_USER=user'
      - 'RABBITMQ_PASS=password'
    networks:
      - tech-challenge-fiap
    depends_on:
      - db
      - rabbitmq

  produto-service:
    image: ufoindustry/tech-challenge-produto
    environment:
      MONGO_HOST: mongodb
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: admin
    ports:
      - 8082:8082
    networks:
        - tech-challenge-fiap
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: admin
    volumes:
      # - mongo-data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - tech-challenge-fiap

networks:
  tech-challenge-fiap:
    driver: bridge



# services:
#   rabbitmq:
#     image: rabbitmq:3.13-management-alpine
#     container_name: 'rabbitmq'
#     ports:
#       - 5672:5672
#       - 15672
#     volumes:
#       - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
#       - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
#     networks:
#       - tech-challenge-fiap
#   db:
#     image: 'postgres:latest'
#     environment:
#       - 'POSTGRES_DB=tech-challenge-db'
#       - 'POSTGRES_USER=myuser'
#       - 'POSTGRES_PASSWORD=secret'
#     ports:
#       - 5432
#     networks:
#       - tech-challenge-fiap

#   pagamento-service:
#     image: brunoalbubrito/tech-challenge-pagamento
#     environment:
#       - 'DB_HOST=db'
#       - 'DB_NAME=tech-challenge-db'
#       - 'DB_USERNAME=myuser'
#       - 'DB_PASSWORD=secret'
#     ports:
#       - 8083:8083
#     networks:
#       - tech-challenge-fiap
#     depends_on:
#       - db
#       - rabbitmq

#   pedido-service:
#     image: edsjunior7/tech-challenge-pedido
#     ports:
#       - 8085:8085
#     environment:
#       - 'DB_HOST=db'
#       - 'DB_NAME=tech-challenge-db'
#       - 'DB_USERNAME=myuser'
#       - 'DB_PASSWORD=secret'
#       - 'RABBITMQ_HOST=rabbitmq'
#       - 'RABBITMQ_USER=user'
#       - 'RABBITMQ_PASS=password'
#       - 'PAGAMENTO_API_URL=http://backend:8080'
#     networks:
#       - tech-challenge-fiap
#     depends_on:
#       - db
#       - rabbitmq

#   produto-service:
#     image: ufoindustry/tech-challenge-produto
#     environment:
#       MONGO_HOST: mongodb
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: rootpassword
#       MONGO_INITDB_DATABASE: admin
#     ports:
#       - 8082:8082
#     networks:
#         - tech-challenge-fiap
#     depends_on:
#       - mongodb

#   mongodb:
#     image: mongo:latest
#     container_name: mongodb
#     restart: unless-stopped
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: rootpassword
#       MONGO_INITDB_DATABASE: admin
#     volumes:
#       # - mongo-data:/data/db
#       - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
#     ports:
#       - "27017:27017"
#     networks:
#       - tech-challenge-fiap

# networks:
#   tech-challenge-fiap:
#     driver: bridge
