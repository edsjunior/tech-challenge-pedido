// <auto-generated />
using System;
using G64.PedidoAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace G64.PedidoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.32");

            modelBuilder.Entity("G64.PedidoAPI.Models.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoUnitario")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ItensPedidos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86b22a19-dd75-4930-b0cd-98ae877ee7fc"),
                            Descricao = "Combo Whopper",
                            PrecoUnitario = 15.99m,
                            Quantidade = 1
                        },
                        new
                        {
                            Id = new Guid("a8755a2a-aec2-4a13-8528-254a134e2ecd"),
                            Descricao = "Coca-cola",
                            PrecoUnitario = 5.99m,
                            Quantidade = 1
                        },
                        new
                        {
                            Id = new Guid("901a933b-7b47-476b-a00b-061be2a5e505"),
                            Descricao = "Batata Frita",
                            PrecoUnitario = 7.99m,
                            Quantidade = 1
                        },
                        new
                        {
                            Id = new Guid("fc72b3b6-06f9-4770-9f0c-eb93bc2be940"),
                            Descricao = "Sorvete",
                            PrecoUnitario = 9.99m,
                            Quantidade = 2
                        });
                });

            modelBuilder.Entity("G64.PedidoAPI.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasPrecision(12, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("792b2330-22d6-4001-a5fe-4c97c1d47a53"),
                            Data = new DateTime(2024, 8, 4, 2, 14, 28, 783, DateTimeKind.Local).AddTicks(7637),
                            Status = 0,
                            Total = 29.97m
                        },
                        new
                        {
                            Id = new Guid("99d692e8-3b89-48d2-8280-9d2ca5b35a60"),
                            Data = new DateTime(2024, 8, 4, 2, 14, 28, 783, DateTimeKind.Local).AddTicks(7649),
                            Status = 0,
                            Total = 19.98m
                        });
                });

            modelBuilder.Entity("PedidoItemPedido", b =>
                {
                    b.Property<Guid>("PedidosId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ItemPedidosId")
                        .HasColumnType("TEXT");

                    b.HasKey("PedidosId", "ItemPedidosId");

                    b.HasIndex("ItemPedidosId");

                    b.ToTable("PedidoItemPedido");

                    b.HasData(
                        new
                        {
                            PedidosId = new Guid("792b2330-22d6-4001-a5fe-4c97c1d47a53"),
                            ItemPedidosId = new Guid("86b22a19-dd75-4930-b0cd-98ae877ee7fc")
                        },
                        new
                        {
                            PedidosId = new Guid("792b2330-22d6-4001-a5fe-4c97c1d47a53"),
                            ItemPedidosId = new Guid("a8755a2a-aec2-4a13-8528-254a134e2ecd")
                        },
                        new
                        {
                            PedidosId = new Guid("792b2330-22d6-4001-a5fe-4c97c1d47a53"),
                            ItemPedidosId = new Guid("901a933b-7b47-476b-a00b-061be2a5e505")
                        },
                        new
                        {
                            PedidosId = new Guid("99d692e8-3b89-48d2-8280-9d2ca5b35a60"),
                            ItemPedidosId = new Guid("fc72b3b6-06f9-4770-9f0c-eb93bc2be940")
                        });
                });

            modelBuilder.Entity("PedidoItemPedido", b =>
                {
                    b.HasOne("G64.PedidoAPI.Models.ItemPedido", null)
                        .WithMany()
                        .HasForeignKey("ItemPedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G64.PedidoAPI.Models.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
