// <auto-generated />
using System;
using G64.PedidoAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace G64.PedidoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("G64.PedidoAPI.Models.ItemPedido", b =>
                {
                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("valorPorUnidade")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)");

                    b.HasKey("uuid");

                    b.ToTable("ItensPedidos");

                    b.HasData(
                        new
                        {
                            uuid = new Guid("69d69f8b-d34e-4134-9169-1380a0bbd6a6"),
                            categoria = "Lanche",
                            descricao = "Combo Whopper",
                            quantidade = 1,
                            titulo = "Whopper",
                            valorPorUnidade = 15.99m
                        },
                        new
                        {
                            uuid = new Guid("f8bf4fe4-1285-4a76-be05-6f3ce4e4f10d"),
                            categoria = "Bebida",
                            descricao = "Coca-cola",
                            quantidade = 1,
                            titulo = "Refrigerante",
                            valorPorUnidade = 5.99m
                        },
                        new
                        {
                            uuid = new Guid("135d1439-b2b8-4010-926b-413cb8f638de"),
                            categoria = "Acompanhamento",
                            descricao = "Batata Frita",
                            quantidade = 1,
                            titulo = "Fritas",
                            valorPorUnidade = 7.99m
                        },
                        new
                        {
                            uuid = new Guid("14823eaa-1181-4495-a061-cda21898d89d"),
                            categoria = "Sobremesa",
                            descricao = "Sorvete de flocos",
                            quantidade = 2,
                            titulo = "Sorvete",
                            valorPorUnidade = 9.99m
                        });
                });

            modelBuilder.Entity("G64.PedidoAPI.Models.Pedido", b =>
                {
                    b.Property<Guid>("pedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("statusPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("valorTotal")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)");

                    b.HasKey("pedidoId");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            pedidoId = new Guid("e69b4050-2153-423a-bdce-6afe5146af21"),
                            data = new DateTime(2024, 8, 7, 1, 27, 48, 242, DateTimeKind.Utc).AddTicks(456),
                            status = "PENDENTE",
                            statusPagamento = "PENDENTE",
                            valorTotal = 29.97m
                        },
                        new
                        {
                            pedidoId = new Guid("c85d425e-492a-4331-875f-fb31f067002f"),
                            data = new DateTime(2024, 8, 7, 1, 27, 48, 242, DateTimeKind.Utc).AddTicks(493),
                            status = "PENDENTE",
                            statusPagamento = "PENDENTE",
                            valorTotal = 19.98m
                        });
                });

            modelBuilder.Entity("PedidoItemPedido", b =>
                {
                    b.Property<Guid>("PedidosId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemPedidosId")
                        .HasColumnType("uuid");

                    b.HasKey("PedidosId", "ItemPedidosId");

                    b.HasIndex("ItemPedidosId");

                    b.ToTable("PedidoItemPedido");

                    b.HasData(
                        new
                        {
                            PedidosId = new Guid("e69b4050-2153-423a-bdce-6afe5146af21"),
                            ItemPedidosId = new Guid("69d69f8b-d34e-4134-9169-1380a0bbd6a6")
                        },
                        new
                        {
                            PedidosId = new Guid("e69b4050-2153-423a-bdce-6afe5146af21"),
                            ItemPedidosId = new Guid("f8bf4fe4-1285-4a76-be05-6f3ce4e4f10d")
                        },
                        new
                        {
                            PedidosId = new Guid("e69b4050-2153-423a-bdce-6afe5146af21"),
                            ItemPedidosId = new Guid("135d1439-b2b8-4010-926b-413cb8f638de")
                        },
                        new
                        {
                            PedidosId = new Guid("c85d425e-492a-4331-875f-fb31f067002f"),
                            ItemPedidosId = new Guid("14823eaa-1181-4495-a061-cda21898d89d")
                        });
                });

            modelBuilder.Entity("PedidoItemPedido", b =>
                {
                    b.HasOne("G64.PedidoAPI.Models.ItemPedido", null)
                        .WithMany()
                        .HasForeignKey("ItemPedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G64.PedidoAPI.Models.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
